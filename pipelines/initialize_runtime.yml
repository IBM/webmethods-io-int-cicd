##############################################################################################################
#                                                                                                            #
# initialize_runtime.yml : Registers a runtime                                                               #
#                                                                                                            #
# ####### Inputs ########                                                                                    #
# stage: (Mandatory) Id of the asset to be Imported                                                          #
# aliasName: (Mandatory) name of the asset                                                                   #
##############################################################################################################

trigger: none


pool:
  vmImage: ubuntu-latest

variables:
- name: init
  value: true
- group: webMethodsIO_group
- group: azure_group
- group: github_group
- name: repoPath
  value: $(gitOwner)/$(repoName)



steps:
- checkout: self
  submodules: "true"
  persistCredentials: "true"
  clean: "true"
  path: self

- script: |
    echo "##vso[task.setvariable variable=environment;]play"
    echo "##vso[task.setvariable variable=visibility;]Private"
    echo "##vso[task.setvariable variable=description;]Automated"
  displayName: 'Default Environment'



- bash: |
    pwd
    cd ../self
    pwd
    ls -ltr
    echo "##vso[task.setvariable variable=source_environment_hostname]`yq -e ".tenant.hostname" configs/env/$(environment).yml`"
    echo "##vso[task.setvariable variable=source_environment_port]`yq -e ".tenant.port" configs/env/$(environment).yml`"
    echo "##vso[task.setvariable variable=admin_user]`yq -e ".tenant.admin_username" configs/env/$(environment).yml`"
    echo "##vso[task.setvariable variable=source_type]`yq -e ".tenant.type" configs/env/$(environment).yml`"
    echo "##vso[task.setvariable variable=repo_user]`yq -e ".repo.user" configs/repo.yml`"
    
        echo $(System.DefaultWorkingDirectory)
  workingDirectory: '$(System.DefaultWorkingDirectory)'
  displayName: 'Get Environment Tenant Details'
- script: |
      cd ../

      ########GitHub 
        HOME_DIR=$(System.DefaultWorkingDirectory)/../

        chmod +x ./self/pipelines/scripts/github/*.sh
        ./self/pipelines/scripts/initializeRuntime.sh ${LOCAL_DEV_URL} $(admin_user) $(admin_password) $(aliasName) $(visibility) $(description) debug

  displayName: 'Create a repo and required branches'

  