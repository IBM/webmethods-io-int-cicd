##############################################################################################################
#                                                                                                            #
# execute_codereviewme.yml : Execute ISSCR of Flowservices                                                   #
#                                                                                                            #
# ####### Inputs ########                                                                                    #
# branch: (Mandatory) on which branch code review has to be done                                             #
# repoName/projectName: (Mandatory) name of the project                                                      #
##############################################################################################################

trigger: none


pool:
  vmImage: ubuntu-latest

variables:
- group: webMethodsIO_group
- group: azure_group
- group: github_group
- group: IBM_Registry
- name: repoPath
  value: $(gitOwner)/$(repoName)

resources:
  repositories:
  - repository: wmio_isccrRepo
    type: github
    endpoint: github
    name: $(gitOwner)/wmio-isccr
    ref: main
  - repository: projectRepo
    type: github
    endpoint: github
    name: $(repoPath)
    ref: $(codeReviewBranch)

steps:
- checkout: self
  submodules: "true"
  persistCredentials: "true"
  clean: "true"
  path: self
- checkout: wmio_isccrRepo
  submodules: "true"
  persistCredentials: "true"
  clean: "true"
  path: wmio-isccr
- checkout: projectRepo
  submodules: "true"
  persistCredentials: "true"
  clean: "true"
  path: $(repoName)


- script: |
    cd ../wmio-isccr
    echo "docker login -u "$(username)" -p "$(token)" "$(registry)
    docker login -u $(username) -p $(token) $(registry)
    docker build -t $(gitOwner)/isccr .
  displayName: 'Build ISCCR Image'

- script: |
    HOME_DIR=$(System.DefaultWorkingDirectory)/../
    cd ${HOME_DIR}
    chmod +x ./self/pipelines/scripts/*.sh
    ./self/pipelines/scripts/executeCodeReview.sh ${HOME_DIR} true $(repoName) debug
  displayName: 'Execute Code Review'
  workingDirectory: '$(System.DefaultWorkingDirectory)'

- script: |
    cd ../
    mkdir -p review
    mkdir -p results/junit
    mkdir -p options
    find $(repoName)/assets/flowservices -name '*.zip' -exec sh -c 'unzip -d "${1%*.zip}" "$1"' _ {} \;
    find $(repoName)/assets/flowservices -name '*.zip' -exec sh -c 'unzip -o -d "${1%*.zip}" "$1"' _ {} \;
    find $(repoName)/assets/flowservices/* -type d -name 'pkg_*' -exec cp -r {} review \;
  displayName: 'Prepare IO Project for Exported Assets'
  workingDirectory: '$(System.DefaultWorkingDirectory)'
  enabled: false

- script: |
    cd ../
    docker run -v ./options:/mnt/code_review_options -v ./review:/mnt/code_review -v ./results:/mnt/code_review_results chini007/isccr pkg_ pkg_
    mv $(System.DefaultWorkingDirectory)/../results/*junit.xml $(System.DefaultWorkingDirectory)/../results/junit/
    cd $(System.DefaultWorkingDirectory)/../results/junit
    pwd
    junitFolder=$(pwd)
    echo "Junit: "${junitFolder}
    echo "##vso[task.setvariable variable=junitFolder]$junitFolder"
    ls -ltr
  displayName: 'Excute ISCCR'
  workingDirectory: '$(System.DefaultWorkingDirectory)'
  enabled: false
- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '*.xml'
    searchFolder: '/home/vsts/work/1/results/junit'
    failTaskOnFailedTests: true
    testRunTitle: '$(repoName) Code Review'
  displayName: 'Parsing the code review JUnit'
- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: '$(System.DefaultWorkingDirectory)/../results'
    artifactName: '$(repoName)_codeReview'
  displayName: 'Publishing the code review'


